'Wstępny skrypt
GraphicsWindow.CanResize = "FALSE"
GraphicsWindow.Width = 800
GraphicsWindow.Height = 600
GraphicsWindow.BrushColor = "cyan"
paddleWidth = 150
GraphicsWindow.PenWidth = 1.5
paddle = Shapes.AddRectangle(paddleWidth, 12)
ballWidth = 22
liczbaFakePileczek = 5
ball = Shapes.AddEllipse(ballWidth, ballWidth)
Shapes.Move(paddle, GraphicsWindow.Width/2 - paddleWidth/2, GraphicsWindow.Height - 12)
gamePlays = "false"
gamePaused = "false"
levelFilePath = "C:\Users\uczen\Desktop\temp.txt"
pierwszaLinijka = File.ReadLine(levelFilePath, 1)
GraphicsWindow.MouseMove = OnMouseMove
score = 0
licznikZbitychCegielek = 0
'liczbaIteracji - od 0 do końca poziomu
liczbaIteracji = 0
'x, y - pozycja początkowa kulki
x = 450
y = 430
Shapes.Move(ball, x, y)

'deltaX, deltaY - liczby oznaczające przesunięcie w pikselach na jednostkę czasu
deltaX = -3
deltaY = -Math.SquareRoot(3)
GraphicsWindow.PenWidth = 1

'Kreski pomocnicze
kreska = Shapes.AddLine(0, 0, 0, 800)
kreskaprawa = Shapes.AddLine(0, 0, 0, 800)
kreskagora = Shapes.AddLine(0,0,800,0)
kreskadol = Shapes.AddLine(0,0,800,0)
Shapes.HideShape(kreska)
Shapes.HideShape(kreskagora)
Shapes.HideShape(kreskadol)
Shapes.HideShape(kreskaprawa)
'Tabela z kolorkami
kolorki[0]="black"
kolorki[1]="blue"
kolorki[2]="#00ffff"
kolorki[3]="gray"
kolorki[4]="green"
kolorki[5]="magenta"
kolorki[6]="red"
kolorki[7]="yellow"
kolorki[8]="crimson"
kolorki[9]="lightgreen"
kolorki[10]="slateblue"
kolorki[11]="skyblue"
kolorki[12]="lightseagreen"
kolorki[13]="forestgreen"

'wartosc przyspieszenia
przyspieszenie = 1.3
liczbaPrzyspieszen = 0
czyPilkaPoszerzona = "FALSE"
'Tabela z efektami
wskaznikEfektu = 1
efektDoDodania = 0
efekty[0] = 0
'0-brak efektu, 1-przyspieszenie, 2-spowolnienie, 3-szersza platforma, 4-węższa platforma, 5-mnożnik punktów, 6-niezniszczalna cegiełka, 7-poszerzanie piłki, 8-celownik, 9 - fake piłeczki
mnoznikPunktow = 1
liczbaCegielekWOgole = File.ReadLine(levelFilePath, 1)

'Pierwsza cegiełka yayyyy!
liczbaSzarych = 0
liczbaFakeCegielek = 0
For i = 2 to liczbaCegielekWOgole + 1
  linijka = File.ReadLine(levelFilePath, i)
  cegly[i-2][0] = "true"
  For u = 1 to 5
    cegly[i-2][u] = Text.GetSubText(linijka, 1, Text.GetIndexOf(linijka, ",")-1)
    linijka = Text.GetSubText(linijka, Text.GetIndexOf(linijka,",")+1, Text.GetLength(linijka))
  endFor
  cegly[i-2][6] = Text.GetSubText(linijka, Text.GetIndexOf(linijka, ",")+1, Text.GetLength(linijka))
  If cegly[i-2][6] = 6 Then
    liczbaSzarych = liczbaSzarych + 1
  EndIf
  If cegly[i-2][6] = 9 Then
    liczbaFakeCegielek = liczbaFakeCegielek + 1
  EndIf
endFor 
For i = 0 to Array.GetItemCount(cegly) - 1
    GraphicsWindow.BrushColor = kolorki[cegly[i][5]]
    graficzneCegly[i] = Shapes.AddRectangle(cegly[i][3], cegly[i][4])
    Shapes.Move(graficzneCegly[i], cegly[i][1], cegly[i][2])
endFor 

GraphicsWindow.BrushColor = kolorki[1]
GraphicsWindow.FontSize = 22
GraphicsWindow.FontBold = "FALSE"
GraphicsWindow.FontName = "Book Antiqua"
tekstPauzy = Shapes.AddText("PAUZA. Wciśnij SPACE aby kontynuować")
Shapes.Move(tekstPauzy, GraphicsWindow.Width/2 - 418/2, GraphicsWindow.Height/2 - 11)
Shapes.HideShape(tekstPauzy)
GraphicsWindow.KeyDown = OnKeyDown
scoreString = Shapes.AddText("Wynik: " + score)

For i = 0 to Array.GetItemCount(cegly) - 1
  If cegly[i][6] = 9 Then
      GraphicsWindow.BrushColor = "#00ffff"
      GraphicsWindow.PenWidth = 1.5
      For j = 0 to liczbaFakePileczek - 1
        fakePileczki[i][j][0] = Shapes.AddEllipse(22, 22)
        '0 - graficzna reprezentacja, 1 - współrz. X, 2 - współrz. Y, 3 - deltaX, 4 - deltaY
        fakePileczki[i][j][1] = cegly[i][1] + (cegly[i][3]/2) - 11
        fakePileczki[i][j][2] = cegly[i][2] + (cegly[i][4]/2) - 11
        fakePileczki[i][j][3] = -0.1 * Math.GetRandomNumber(30)
        fakePileczki[i][j][4] = Math.SquareRoot(12 - Math.Power(fakePileczki[i][j][3], 2))
        Shapes.SetOpacity(fakePileczki[i][j][0], 0)
        Shapes.Move(fakePileczki[i][j][0], fakePileczki[i][j][1], fakePileczki[i][j][2])
      EndFor
    EndIf
endFor 
wskaznikTablicyFakeGrup = 0
tablicaFakeGrup = 0

Program.Delay(1500)
gamePlays = "true"

start:
'Pętla główna programu
If gamePlays And gamePaused = "false"Then
  gw = GraphicsWindow.Width
  gh = GraphicsWindow.Height

  'Sprawdzanie czy efekty przestają działać
  For i = wskaznikEfektu To Array.GetItemCount(efekty)-1
    If efekty[i][1] = liczbaIteracji Then
      wskaznikEfektu = wskaznikEfektu + 1
      If efekty[i][0] = 1 Then
        liczbaPrzyspieszen = liczbaPrzyspieszen - 1
        deltaX = deltaX/przyspieszenie
        deltaY = deltaY/przyspieszenie
      ElseIf efekty[i][0] = 2 Then
        deltaX = deltaX*przyspieszenie
        deltaY = deltaY*przyspieszenie
      ElseIf efekty[i][0] = 3 Then
        paddleWidth = paddleWidth * 4/5
        Shapes.Remove(paddle)
        GraphicsWindow.BrushColor = "#00ffff"
        GraphicsWindow.PenWidth = 1.5
        paddle = Shapes.AddRectangle(paddleWidth, 12)  
      ElseIf efekty[i][0] = 4 Then
        paddleWidth = paddleWidth * 5/3.5
        Shapes.Remove(paddle)
        GraphicsWindow.BrushColor = "#00ffff"
        GraphicsWindow.PenWidth = 1.5
        paddle = Shapes.AddRectangle(paddleWidth, 12)  
      ElseIf efekty[i][0] = 5 Then
        mnoznikPunktow = mnoznikPunktow - 1
      ElseIf efekty[i][0] = 7 Then
        ballWidth = ballWidth * 22/30
        Shapes.Zoom(ball, 1, 1)
        czyPilkaPoszerzona = "FALSE"
        For f = 0 to Array.GetItemCount(cegly) - 1
          If cegly[f][6] = 9 Then
            For g = 0 to liczbaFakePileczek - 1
              Shapes.Zoom(fakePileczki[f][g][0], 1, 1)
            EndFor
          EndIf
        endFor 
      ElseIf efekty[i][0] = 8 Then
        Shapes.HideShape(kreska)
        Shapes.HideShape(kreskagora)
        Shapes.HideShape(kreskadol)
        Shapes.HideShape(kreskaprawa)
      ElseIf efekty[i][0] = 9 Then
        For c = 0 to liczbaFakePileczek - 1
          Shapes.Remove(fakePileczki[tablicaFakeGrup[wskaznikTablicyFakeGrup]][c][0])
        EndFor
          wskaznikTablicyFakeGrup = wskaznikTablicyFakeGrup + 1
      EndIf
     EndIf
  EndFor
      
  
  'Pomocnicze zmienne przeciw konfliktom
  hasHitX = "false"
  hasHitY = "false"
  'Blok kodu determinujący odbicie od ściany
  If (x >= gw - (ballWidth) Or x <= 0) Then
    If x >= gw - (ballWidth) Then
      x = gw - ballWidth
    Else
      x = 0  
    endIf
    deltaX = -deltaX
  EndIf
  If (y <= 0) Then
    y = 0
    deltaY = -deltaY
  EndIf
  
  'Fake piłeczki - odbicie od ściany
  If Array.GetItemCount(tablicaFakeGrup) <> wskaznikTablicyFakeGrup Then
  For u = wskaznikTablicyFakeGrup to Array.GetItemCount(tablicaFakeGrup) - 1
      i = tablicaFakeGrup[u]
      For j = 0 to liczbaFakePileczek - 1
        If fakePileczki[i][j][1] >= gw - 22 Then
          fakePileczki[i][j][1] = gw - 22
          fakePileczki[i][j][3] = -1 * fakePileczki[i][j][3]
        ElseIf fakePileczki[i][j][1] <= 0 Then
          fakePileczki[i][j][1] = 0
          fakePileczki[i][j][3] = -1 * fakePileczki[i][j][3]
        EndIf
        If fakePileczki[i][j][2] >= gh - 22 Then
          fakePileczki[i][j][2] = gh - 22
          fakePileczki[i][j][4] = -1 * fakePileczki[i][j][4]
        ElseIf fakePileczki[i][j][2] < 0 Then
          fakePileczki[i][j][2] = 0
          fakePileczki[i][j][4] = -1 * fakePileczki[i][j][4]
        EndIf
        Shapes.Move(fakePileczki[i][j][0], fakePileczki[i][j][1] + fakePileczki[i][j][3], fakePileczki[i][j][2] + fakePileczki[i][j][4])
        fakePileczki[i][j][1] = fakePileczki[i][j][1] + fakePileczki[i][j][3]
        fakePileczki[i][j][2] = fakePileczki[i][j][2] + fakePileczki[i][j][4]
      EndFor
  endFor 
  EndIf
  'Blok kodu określający miejsce uderzenia o platformę i ustalenie nowego deltaX
  padX = Shapes.GetLeft(paddle)
  If (y > gh - (ballWidth + 12) And x + ballWidth >= padX And x <= padX + paddleWidth) Then
    If uruchomionaPaletka = "TRUE" Then
    uruchomionaPaletka = "FALSE"
    roznica = (x + (ballWidth/2)) - (padX + (paddleWidth/2))
    v = Math.SquareRoot(Math.Power(deltaX, 2) + Math.Power(deltaY, 2))
    If roznica > 0 Then
      kat = roznica/(paddleWidth/2)*60
      deltaX = v * Math.Sin(Math.GetRadians(kat))*roznica/Math.Abs(roznica)
      deltaY = -Math.Abs(v * Math.Cos(Math.GetRadians(kat)))
    ElseIf roznica < 0 Then
      kat = roznica/(paddleWidth/2)*60
      deltaX = -v * Math.Sin(Math.GetRadians(kat))*roznica/Math.Abs(roznica)
      deltaY = -Math.Abs(v * Math.Cos(Math.GetRadians(kat)))
    Else
      deltaY = -deltaY
    EndIf
    EndIf 
  Else
    uruchomionaPaletka = "TRUE"
  EndIf 
  
  
  
For i = 0 to Array.GetItemCount(cegly) - 1
    'Odbicie od cegiełki
    'Dolna ściana
    If cegly[i][0] And Math.Abs(x - ((0.5*cegly[i][3]) + cegly[i][1])) < 50  Then
      If x + ballWidth >= cegly[i][1] And x <= (cegly[i][1] + cegly[i][3]) And y <= cegly[i][2] + cegly[i][4] And y > cegly[i][2] And y + (ballWidth/2) > cegly[i][2] + cegly[i][4]  then
        y = cegly[i][2] + cegly[i][4]
        If deltaY/Math.Abs(deltaY) < 0 Then
          hasHitY = "true"
        Else
          hasHitX = "true"
        EndIf  
      If cegly[i][6] <> 6 Then
      efektDoDodania = cegly[i][6]
      licznikZbitychCegielek = licznikZbitychCegielek + 1
      If efektDoDodania > 0 Then
        If efektDoDodania = 9 Then
          indeksFakeCegielki = i
        EndIf
        DodajEfekt()
      EndIf
      score = score + 1*mnoznikPunktow
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
      EndIf
    'Górna ściana
    ElseIf x + ballWidth >= cegly[i][1] And x <= (cegly[i][1] + cegly[i][3]) And y + ballWidth >= cegly[i][2] And y + ballWidth < cegly[i][2] + cegly[i][4] And y + (ballWidth/2) < cegly[i][2] then
      y = cegly[i][2] - ballWidth
      If deltaY/Math.Abs(deltaY) > 0 Then
          hasHitY = "true"
        Else
          hasHitX = "true"
      EndIf    
      If cegly[i][6] <> 6 Then
      efektDoDodania = cegly[i][6]
      licznikZbitychCegielek = licznikZbitychCegielek + 1
      If efektDoDodania > 0 Then
        If efektDoDodania = 9 Then
          indeksFakeCegielki = i
        EndIf
        DodajEfekt()
      EndIf
      score = score + 1*mnoznikPunktow
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
      EndIf
    'Lewa ściana
    ElseIf x + ballWidth >= cegly[i][1] And x + ballWidth < cegly[i][1] + cegly[i][3] And y <= (cegly[i][2] + cegly[i][4]) And y + ballWidth >= cegly[i][2] And x + (ballWidth/2) < cegly[i][1] Then 
      x = cegly[i][1] - ballWidth
      hasHitX = "true"
      If cegly[i][6] <> 6 Then
      efektDoDodania = cegly[i][6]
      licznikZbitychCegielek = licznikZbitychCegielek + 1
      If efektDoDodania > 0 Then
        If efektDoDodania = 9 Then
          indeksFakeCegielki = i
        EndIf
        DodajEfekt()
      EndIf
      score = score + 1*mnoznikPunktow
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
      EndIf
    'Prawa ściana
    ElseIf x <= cegly[i][1] + cegly[i][3] And x > cegly[i][1]  And y <= (cegly[i][2] + cegly[i][4]) And y + ballWidth >= cegly[i][2] And x + (ballWidth/2) > cegly[i][1] + cegly[i][3] then
      x = cegly[i][1] + cegly[i][3]
      hasHitX = "true"
      If cegly[i][6] <> 6 Then
      efektDoDodania = cegly[i][6]
      licznikZbitychCegielek = licznikZbitychCegielek + 1
      If efektDoDodania > 0 Then
        If efektDoDodania = 9 Then
          indeksFakeCegielki = i
        EndIf
        DodajEfekt()
      EndIf
      score = score + 1*mnoznikPunktow
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
      endIf
      EndIf
    EndIf
    If cegly[i][0] <> "true" then
    Shapes.Remove(graficzneCegly[i])
    endIf
  EndFor

  'Ostateczne przesunięcie kulki
  If (hasHitY) then
  deltaY = -deltaY
  endIf 
  If (hasHitX) then
  deltaX = -deltaX
  endif
  If deltaY = 0 Then
    deltaY =  -0.01
  EndIf
  x = x + deltaX
  y = y + deltaY
  
  paddleX = GraphicsWindow.MouseX
  Shapes.Move(paddle, paddleX - paddleWidth/2, GraphicsWindow.Height - 12)
  
  Shapes.Move(ball, x, y)
  Shapes.Move(kreska, x, 0)
  Shapes.Move(kreskaprawa, x + ballWidth, 0)
  Shapes.Move(kreskagora,0, y)
  Shapes.Move(kreskadol, 0, y + ballWidth)
 
EndIf
If licznikZbitychCegielek = liczbaCegielekWOgole - liczbaSzarych then
    gamePlays = "false"
    Sound.PlayChime()
  EndIf
  If (y >= gh) Then
    gamePlays = "false"
    Sound.PlayBellRing()
  Else
    liczbaIteracji = liczbaIteracji + 5
    Goto start
  EndIf      
      
Sub OnMouseMove
  'If gamePlays And gamePaused = "false" Then
  'paddleX = GraphicsWindow.MouseX
  'Shapes.Move(paddle, paddleX - 60, GraphicsWindow.Height - 12)
  'EndIf
EndSub

Sub OnKeyDown
  If GraphicsWindow.LastKey = "Space" And gamePlays Then
    If gamePaused = "false" Then
      gamePaused = "true"
      Shapes.ShowShape(tekstPauzy)
    Else
      gamePaused = "false"
      Shapes.HideShape(tekstPauzy)
      Program.Delay(5)
      Goto start
    EndIf
  EndIf
EndSub

Sub DodajEfekt
  dlugoscTablicy = Array.GetItemCount(efekty)
  efekty[dlugoscTablicy][0] = efektDoDodania
  '5000 - 5 s
  
  If efekty[dlugoscTablicy][0] = 1 Then
    efekty[dlugoscTablicy][1] = liczbaIteracji + 5000
    liczbaPrzyspieszen = liczbaPrzyspieszen + 1
      deltaX = deltaX*przyspieszenie
      deltaY = deltaY*przyspieszenie
    ElseIf efekty[dlugoscTablicy][0] = 2 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 5000
      deltaX = deltaX/przyspieszenie
      deltaY = deltaY/przyspieszenie
    ElseIf efekty[dlugoscTablicy][0] = 3 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 1000
      paddleWidth = paddleWidth*5/4
      Shapes.Remove(paddle)
      GraphicsWindow.BrushColor = "#00ffff"
      GraphicsWindow.PenWidth = 1.5
      paddle = Shapes.AddRectangle(paddleWidth, 12)
    ElseIf efekty[dlugoscTablicy][0] = 4 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 1000
      paddleWidth = paddleWidth*3.5/5
      Shapes.Remove(paddle)
      GraphicsWindow.BrushColor = "#00ffff"
      GraphicsWindow.PenWidth = 1.5
      paddle = Shapes.AddRectangle(paddleWidth, 12)
    ElseIf efekty[dlugoscTablicy][0] = 5 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 10000
      mnoznikPunktow = mnoznikPunktow + 1
    ElseIf efekty[dlugoscTablicy][0] = 7 Then
      If czyPilkaPoszerzona = "FALSE" Then
        indeksEfektuPoszerzenia = dlugoscTablicy
        efekty[indeksEfektuPoszerzenia][1] = liczbaIteracji + 5000 
        ballWidth = ballWidth * 30/22
        Shapes.Zoom(ball, 30/22, 30/22)
        czyPilkaPoszerzona = "TRUE"
        For f = 0 to Array.GetItemCount(cegly) - 1
          If cegly[f][6] = 9 Then
            For g = 0 to liczbaFakePileczek - 1
              Shapes.Zoom(fakePileczki[f][g][0], 30/22, 30/22)
            EndFor
          EndIf
        endFor 
      Else
        efekty[indeksEfektuPoszerzenia][1] = liczbaIteracji + 5000
      EndIf
    ElseIf efekty[dlugoscTablicy][0] = 8 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 5000
      Shapes.ShowShape(kreska)
      Shapes.ShowShape(kreskagora)
      Shapes.ShowShape(kreskadol)
      Shapes.ShowShape(kreskaprawa)
    ElseIf efekty[dlugoscTablicy][0] = 9 Then
      efekty[dlugoscTablicy][1] = liczbaIteracji + 5000
      tablicaFakeGrup[Array.GetItemCount(tablicaFakeGrup)] = indeksFakeCegielki
      For e = 0 to liczbaFakePileczek - 1
        Shapes.SetOpacity(fakePileczki[indeksFakeCegielki][e][0], 100)
        If hasHitX Then
          fakePileczki[indeksFakeCegielki][e][3] = (deltaX/Math.Abs(deltaX))*fakePileczki[indeksFakeCegielki][e][3]*Math.Power(przyspieszenie, liczbaPrzyspieszen)
        Else
          fakePileczki[indeksFakeCegielki][e][3] = -(deltaX/Math.Abs(deltaX))*fakePileczki[indeksFakeCegielki][e][3]*Math.Power(przyspieszenie, liczbaPrzyspieszen)
        EndIf
        If hasHitY Then
          fakePileczki[indeksFakeCegielki][e][4] = -1*(deltaY/Math.Abs(deltaY))*fakePileczki[indeksFakeCegielki][e][4]*Math.Power(przyspieszenie, liczbaPrzyspieszen)
        Else
          fakePileczki[indeksFakeCegielki][e][4] = (deltaY/Math.Abs(deltaY))*fakePileczki[indeksFakeCegielki][e][4]*Math.Power(przyspieszenie, liczbaPrzyspieszen)
        EndIf
      EndFor
    EndIf
EndSub
  
