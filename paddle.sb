'Wstępny skrypt
GraphicsWindow.CanResize = "FALSE"
GraphicsWindow.Width = 800
GraphicsWindow.Height = 600
GraphicsWindow.BrushColor = "cyan"
paddleWidth = 240
paddle = Shapes.AddRectangle(paddleWidth, 12)
ballWidth = 30
ball = Shapes.AddEllipse(ballWidth, ballWidth)
Shapes.Move(paddle, GraphicsWindow.Width/2 - paddleWidth/2, GraphicsWindow.Height - 12)
gamePlays = "false"
gamePaused = "false"
levelFilePath = "C:\Users\uczen\Desktop\Hit-n-break-dla-mai\temp2.txt"
GraphicsWindow.MouseMove = OnMouseMove
score = 0

'liczbaIteracji - od 0 do końca poziomu
liczbaIteracji = 0
'x, y - pozycja początkowa kulki
x = 600
y = 430
Shapes.Move(ball, x, y)

'deltaX, deltaY - liczby oznaczające przesunięcie w pikselach na jednostkę czasu
deltaX = -2
deltaY = -2
GraphicsWindow.PenWidth = 1

'Kreski pomocnicze
kreska = Shapes.AddLine(0, 0, 0, 800)
kreskaprawa = Shapes.AddLine(0, 0, 0, 800)
kreskagora = Shapes.AddLine(0,0,800,0)
kreskadol = Shapes.AddLine(0,0,800,0)

'Tabela z kolorkami
kolorki[0]="black"
kolorki[1]="blue"
kolorki[2]="cyan"
kolorki[3]="gray"
kolorki[4]="green"
kolorki[5]="magenta"
kolorki[6]="red"
kolorki[7]="yellow"
kolorki[8]="crimson"
kolorki[9]="lightgreen"
kolorki[10]="slateblue"
kolorki[11]="skyblue"
kolorki[12]="lightseagreen"
kolorki[13]="forestgreen"

'wartosc przyspieszenia
przyspieszenie = 1
'Tabela z efektami
wskaznikEfektu = 1
efektDoDodania = 0
efekty[0] = 0
'0-brak efektu, 1-przyspieszenie


'Pierwsza cegiełka yayyyy!
For i = 2 to File.ReadLine(levelFilePath, 1) + 1
  linijka = File.ReadLine(levelFilePath, i)
  cegly[i-2][0] = "true"
  For u = 1 to 5
    cegly[i-2][u] = Text.GetSubText(linijka, 1, Text.GetIndexOf(linijka, ",")-1)
    linijka = Text.GetSubText(linijka, Text.GetIndexOf(linijka,",")+1, Text.GetLength(linijka))
  endFor
  cegly[i-2][6] = Text.GetSubText(linijka, Text.GetIndexOf(linijka, ",")+1, Text.GetLength(linijka))
endFor 

For i = 0 to Array.GetItemCount(cegly) - 1
    GraphicsWindow.BrushColor = kolorki[cegly[i][5]]
    graficzneCegly[i] = Shapes.AddRectangle(cegly[i][3], cegly[i][4])
    Shapes.Move(graficzneCegly[i], cegly[i][1], cegly[i][2])
  endFor 

GraphicsWindow.BrushColor = kolorki[1]
GraphicsWindow.FontSize = 22
GraphicsWindow.FontBold = "FALSE"
GraphicsWindow.FontName = "Book Antiqua"
tekstPauzy = Shapes.AddText("PAUZA. Wciśnij SPACE aby kontynuować")
Shapes.Move(tekstPauzy, GraphicsWindow.Width/2 - 418/2, GraphicsWindow.Height/2 - 11)
Shapes.HideShape(tekstPauzy)
GraphicsWindow.KeyDown = OnKeyDown
scoreString = Shapes.AddText("Wynik: " + score)
Program.Delay(1500)
gamePlays = "true"

start:
'Pętla główna programu
If gamePlays And gamePaused = "false"Then
  gw = GraphicsWindow.Width
  gh = GraphicsWindow.Height
  
  
  'Sprawdzanie czy efekty przestają działać
  If wskaznikEfektu < Array.GetItemCount(efekty) Then
    If efekty[wskaznikEfektu][1] = liczbaIteracji Then
      usun:
      If efekty[wskaznikEfektu][0] = 1 Then
        deltaX = deltaX-przyspieszenie
        deltaY = deltaY-przyspieszenie
      EndIf
      wskaznikEfektu = wskaznikEfektu + 1
      If wskaznikEfektu < Array.GetItemCount(efekty) And efekty[wskaznikEfektu][1] = liczbaIteracji Then
        Goto usun
      Endif
     EndIf
   Endif
      
  
  'Pomocnicze zmienne przeciw konfliktom
  hasHitX = "false"
  hasHitY = "false"
  
  'Blok kodu determinujący odbicie od ściany
  If (x >= gw - (ballWidth) Or x <= 0) Then
    If x >= gw - (ballWidth) Then
      x = gw - ballWidth
    Else
      x = 0  
    endIf
    deltaX = -deltaX
  EndIf
  If (y <= 0) Then
    y = 0
    deltaY = -deltaY
  EndIf
  
  'Blok kodu określający miejsce uderzenia o platformę i ustalenie nowego deltaX
  padX = Shapes.GetLeft(paddle)
  If (y >= gh - (ballWidth + 12) And x + ballWidth >= padX And x <= padX + paddleWidth) Then
    y = gh - (ballWidth + 12)
    deltaY = -deltaY
    If (x+(ballWidth/2)) > padX + (paddleWidth/5) And (x+(ballWidth/2)) < padX + (paddleWidth*4/5) Then
      If (x+(ballWidth/2)) < padX + (paddleWidth*2/5) - 2 Then
        deltaX = deltaX - 0.3*Math.Abs(deltaX)
      ElseIf (x+(ballWidth/2)) > padX + (paddleWidth*3/5) + 2 Then
        deltaX = deltaX + 0.3*Math.Abs(deltaX)
      EndIf
    ElseIf (x+(ballWidth/2)) <= padX + (paddleWidth/5) Then
      deltaX = deltaX - 0.5*Math.Abs(deltaX)
    ElseIf (x+(ballWidth/2)) >= padX + (paddleWidth*4/5) Then
      deltaX = deltaX + 0.5*Math.Abs(deltaX) 
    EndIf
  EndIf
  
  For i = 0 to Array.GetItemCount(cegly) - 1
    'Odbicie od cegiełki
    'Dolna ściana
    If cegly[i][0] Then
    If x + ballWidth >= cegly[i][1] And x <= (cegly[i][1] + cegly[i][3]) And y <= cegly[i][2] + cegly[i][4] And y > cegly[i][2] + cegly[i][4] - Math.Abs(deltaY) then
      y = cegly[i][2] + cegly[i][4]
      hasHitY = "true"
      efektDoDodania = cegly[i][6]
      If efektDoDodania > 0 Then
        DodajEfekt()
      EndIf
      score = score + 1
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
    'Górna ściana
    ElseIf x + ballWidth >= cegly[i][1] And x <= (cegly[i][1] + cegly[i][3]) And y + ballWidth >= cegly[i][2] And y + ballWidth < cegly[i][2] + Math.Abs(deltaY) then
      y = cegly[i][2] - ballWidth
      hasHitY = "true"
      efektDoDodania = cegly[i][6]
      If efektDoDodania > 0 Then
        DodajEfekt()
      EndIf
      score = score + 1
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
    'Lewa ściana
    ElseIf x + ballWidth >= cegly[i][1] And x + ballWidth < cegly[i][1] + Math.Abs(deltaX) And y <= (cegly[i][2] + cegly[i][4]) And y + ballWidth >= cegly[i][2] Then 
      x = cegly[i][1] - ballWidth
      hasHitX = "true"
      efektDoDodania = cegly[i][6]
      If efektDoDodania > 0 Then
        DodajEfekt()
      EndIf
      score = score + 1
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
    'Prawa ściana
    ElseIf x <= cegly[i][1] + cegly[i][3] And x > cegly[i][1] + cegly[i][3] - Math.Abs(deltaX)  And y <= (cegly[i][2] + cegly[i][4]) And y + ballWidth >= cegly[i][2] then
      x = cegly[i][1] + cegly[i][3]
      hasHitX = "true"
      efektDoDodania = cegly[i][6]
      If efektDoDodania > 0 Then
        DodajEfekt()
      EndIf
      score = score + 1
      Shapes.SetText(scoreString, "Wynik: " + score)
      Sound.PlayClick()
      cegly[i][0] = "false"
      endIf
    EndIf
    If cegly[i][0] <> "true" then
    Shapes.Remove(graficzneCegly[i])
    endIf
  EndFor

  'Ostateczne przesunięcie kulki
  If (hasHitY) then
  deltaY = -deltaY
  endIf 
  If (hasHitX) then
  deltaX = -deltaX
  endif

  x = x + deltaX
  y = y + deltaY
  
  paddleX = GraphicsWindow.MouseX
  Shapes.Move(paddle, paddleX - paddleWidth/2, GraphicsWindow.Height - 12)
  
  Shapes.Move(ball, x, y)
  Shapes.Move(kreska, x, 0)
  Shapes.Move(kreskaprawa, x + ballWidth, 0)
  Shapes.Move(kreskagora,0, y)
  Shapes.Move(kreskadol, 0, y + ballWidth)
 
EndIf
If score = File.ReadLine(levelFilePath, 1) Then
    gamePlays = "false"
    Sound.PlayChime()
  EndIf
  If (y >= gh) Then
    gamePlays = "false"
    Sound.PlayBellRing()
  Else
    Program.Delay(5)
    liczbaIteracji = liczbaIteracji + 5
    Goto start
  EndIf      
      
Sub OnMouseMove
  'If gamePlays And gamePaused = "false" Then
  'paddleX = GraphicsWindow.MouseX
  'Shapes.Move(paddle, paddleX - 60, GraphicsWindow.Height - 12)
  'EndIf
EndSub

Sub OnKeyDown
  If GraphicsWindow.LastKey = "Space" And gamePlays Then
    If gamePaused = "false" Then
      gamePaused = "true"
      Shapes.ShowShape(tekstPauzy)
    Else
      gamePaused = "false"
      Shapes.HideShape(tekstPauzy)
      Program.Delay(5)
      Goto start
    EndIf
  EndIf
EndSub

Sub DodajEfekt
  dlugoscTablicy = Array.GetItemCount(efekty)
  efekty[dlugoscTablicy][0] = efektDoDodania
  '5000 - 5 s
  efekty[dlugoscTablicy][1] = liczbaIteracji + 5000
  If efekty[dlugoscTablicy][0] = 1 Then
    If deltaX < 0 Then
      deltaX = deltaX-przyspieszenie
    Else
      deltaX = deltaX+przyspieszenie
    EndIf
    If deltaY < 0 Then
      deltaY = deltaY-przyspieszenie
    Else
      deltaY = deltaY+przyspieszenie
     EndIf
  EndIf
EndSub
  
